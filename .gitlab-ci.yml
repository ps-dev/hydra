image: openjdk:8

variables:
  ARTIFACT_NAME: hydra-publish
  IMAGE_NAME: hydra
  DOCKER_REGISTRY_IMAGE: harbor.vnerd.com/library/${IMAGE_NAME}

before_script:
  - apt-get update -yqq
  - apt-get install -yqq apt-transport-https apt-utils
  - echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | tee -a /etc/apt/sources.list.d/sbt.list
  - mkdir -p /root/.gnupg
  - gpg --recv-keys --no-default-keyring --keyring gnupg-ring:/etc/apt/trusted.gpg.d/scalasbt-release.gpg --keyserver hkp://keyserver.ubuntu.com:80 2EE0EA64E40A89B84B2DF73499E82A75642AC823
  - chmod 644 /etc/apt/trusted.gpg.d/scalasbt-release.gpg
  - apt-get update -yqq
  - apt-get install -yqq sbt docker.io
  - docker login harbor.vnerd.com -u ${DOCKER_REGISTRY_USERNAME} -p ${DOCKER_REGISTRY_PASSWORD}
  - echo "${DOCKER_REGISTRY_USERNAME}"

stages:
  - build
  - package
  - publish
  - finalize

build:
  stage: build
  script:
    - sbt clean compile test

package:
  stage: package
  script:
    - sbt universal:packageBin
    - ls ingest/target/universal/*.zip | xargs -I {} unzip {} -d ps-publish
    - mv ps-publish/hydra-ingest*/* ps-publish
    - rm -rf ps-publish/hydra-ingest*
    - cd ps-publish/bin
    - ls -la
    - curl -O https://download.newrelic.com/newrelic/java-agent/newrelic-agent/4.4.0/newrelic-agent-4.4.0.jar
    - curl -O https://download.newrelic.com/newrelic/java-agent/newrelic-agent/4.4.0/newrelic.yml
    - cd ../../
    - echo $CI_PIPELINE_IID > VERSION
    - tar czf ${ARTIFACT_NAME}-${CI_PIPELINE_IID}.tgz --exclude=*.tmp --exclude=*.tgz --exclude=*.tgz.md5 VERSION ps-publish/
    - echo "##teamcity[publishArtifacts '%env.ARTIFACT_NAME%-${CI_PIPELINE_IID}.tgz']"

publish:
  stage: publish
  script:
    - md5sum ${ARTIFACT_NAME}-${CI_PIPELINE_IID}.tgz > ${ARTIFACT_NAME}-${CI_PIPELINE_IID}.tgz.md5
    - echo "##teamcity[publishArtifacts '%env.ARTIFACT_NAME%-${CI_PIPELINE_IID}.tgz.md5']"
    - docker build -t ${IMAGE_NAME} -f Dockerfile.new .
    - docker tag ${IMAGE_NAME} ${DOCKER_REGISTRY_IMAGE}:${CI_PIPELINE_IID}

finalize:
  stage: finalize
  script:
    - docker login -u ${DOCKER_REGISTRY_USERNAME} -p ${DOCKER_REGISTRY_PASSWORD} harbor.vnerd.com
    - docker push ${DOCKER_REGISTRY_IMAGE}:${CI_PIPELINE_IID}
    - docker tag ${IMAGE_NAME} ${DOCKER_REGISTRY_IMAGE}:latest
    - docker push ${DOCKER_REGISTRY_IMAGE}:latest
    - CURYEAR=$(date +%Y)
    - CURMONTH=$(date +%-m)
    - echo -n "${CURYEAR}.${CURMONTH}.${CI_PIPELINE_IID}" > VERSION
